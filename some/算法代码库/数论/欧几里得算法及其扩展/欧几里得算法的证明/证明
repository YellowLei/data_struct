

function gcd(a, b)
{
    return b==0?a:gcd(b,a%b);
}

辗转相除法的正确性可以分成两步来证明。
在第一步，我们会证明算法的最终结果rN−1同时整除a和b。因为它是一个公约数，所以必然小于或者等于最大公约数g。
在第二步，我们证明g能整除rN−1。所以g一定小于或等于rN−1。两个不等式只在rN−1 = g是同时成立。
具体证明如下：
1.证明rN−1同时整除a和b：
    因为余数rN是0，rN−1能够整除rN−2：
    rN−2 = qN rN−1
    因为rN−1能够整除rN−2，所以也能够整除rN−3：
    rN−3 = qN−1 rN−2 + rN−1
    同理可证rN−1可以整除所有之前步骤的余数，包括a和b，即rN−1是a和b的公约数，rN−1 ≤ g。
2.证明最大公约数g能整除rN-1：
    根据定义，a和b可以写成g的倍数：a = mg、b = ng，其中m和n是自然数。
    因为r0 = a − q0b = mg − q0ng = (m − q0n)g，所以g整除r0。同理可证g整除每个余数r1, r2, ..., rN-1。
    因为最大公约数g整除rN−1，因而g ≤ rN−1。
    因为第一步的证明告诉我们rN−1 ≤ g，所以g = rN−1。

g = GCD(a, b) = GCD(b, r0) = GCD(r0, r1) = … = GCD(rN−2, rN−1) = rN−1
