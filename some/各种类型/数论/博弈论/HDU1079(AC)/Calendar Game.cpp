#include<iostream>
#include<cstdio>

using namespace std;

int main()
{
    int T,Y,M,D;
    scanf("%d",&T);
    while(T--)
    {
        scanf("%d%d%d",&Y,&M,&D);
        if((M+D)%2==0||(M==9||M==11)&&D==30)
            printf("YES\n");
        else
            printf("NO\n");
    }
    return 0;
}//不管是月份加一，还是日期加一，都改变了奇偶性，只有两个特殊日期9月30日，和11月30日例外
//胜负和年份是没有关系，年份影响的只是2月是否存在第29天……而29是必败点，28为必胜……
//月份+日期==偶数 （除去两个例外）
//那么目标日期是11月4日，为奇数。初始日期如果为偶数的话，先者必胜。
//考虑特殊是日期，两个特殊日期本来为奇数，移动一步还是偶数。那么会不会在中途经过这两个日期呢。
//如果本来为偶数，如果经过特殊日期就会改变奇偶，从必胜到必败。作为先手，不会主动进入特殊日期，而后者不可能从奇数依旧到达特殊日期的奇数。
//如果本来为奇数，同样先手想赢，但是不可能进入特殊日期。保持奇偶性交替变化。
//这样一来只可能是初始为特殊日期，否则中途不可能出现特殊日期
